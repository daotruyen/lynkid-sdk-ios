// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios18.2 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-bare-slash-regex -module-name LynkiDSDK
import Alamofire
import ContactsUI
import CoreImage
import DeveloperToolsSupport
import EasyTipView
import Foundation
import IQKeyboardManagerSwift
@_exported import LynkiDSDK
import Moya
import Pageboy
import RxCocoa
import RxRelay
import RxSwift
import SDWebImage
import SVGKit
import Swift
import SwiftUI
import SwiftyAttributes
import Tabman
import UIKit
import UIKit.UIViewController
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import iCarousel
extension UIKit.UINavigationController {
  @_Concurrency.MainActor @preconcurrency @objc override dynamic open var preferredStatusBarStyle: UIKit.UIStatusBarStyle {
    @objc get
  }
}
public struct BottomSheetConfiguration {
  public let showPullBar: Swift.Bool
  public let tapToDismissEnabled: Swift.Bool
  public let panToDismissEnabled: Swift.Bool
  public let cornerRadius: CoreFoundation.CGFloat
  public let overlayColor: UIKit.UIColor
  public let animationDuration: Foundation.TimeInterval
  public let dampingRatio: Swift.Double
  public let dismissThreshold: CoreFoundation.CGFloat
  public init(showPullBar: Swift.Bool, tapToDismissEnabled: Swift.Bool, panToDismissEnabled: Swift.Bool, cornerRadius: CoreFoundation.CGFloat, overlayColor: UIKit.UIColor, animationDuration: Foundation.TimeInterval, dampingRatio: Swift.Double, dismissThreshold: CoreFoundation.CGFloat)
  public static let `default`: LynkiDSDK.BottomSheetConfiguration
}
@objc final public class BottomSheetTransitioningDelegate : ObjectiveC.NSObject {
  public init(configuration: LynkiDSDK.BottomSheetConfiguration)
  @objc deinit
}
extension LynkiDSDK.BottomSheetTransitioningDelegate : UIKit.UIViewControllerTransitioningDelegate {
  @_Concurrency.MainActor @preconcurrency @objc final public func animationController(forPresented presented: UIKit.UIViewController, presenting: UIKit.UIViewController, source: UIKit.UIViewController) -> (any UIKit.UIViewControllerAnimatedTransitioning)?
  @_Concurrency.MainActor @preconcurrency @objc final public func animationController(forDismissed dismissed: UIKit.UIViewController) -> (any UIKit.UIViewControllerAnimatedTransitioning)?
  @_Concurrency.MainActor @preconcurrency @objc final public func interactionControllerForDismissal(using animator: any UIKit.UIViewControllerAnimatedTransitioning) -> (any UIKit.UIViewControllerInteractiveTransitioning)?
  @_Concurrency.MainActor @preconcurrency @objc final public func presentationController(forPresented presented: UIKit.UIViewController, presenting: UIKit.UIViewController?, source: UIKit.UIViewController) -> UIKit.UIPresentationController?
}
extension UIKit.UIFont {
  public static func loadFonts()
}
extension UIKit.UITableView {
  @_Concurrency.MainActor @preconcurrency public func register<T>(cellType: T.Type) where T : UIKit.UITableViewCell
  @_Concurrency.MainActor @preconcurrency public func register<T>(cellTypes: [T.Type], bundle: Foundation.Bundle? = nil) where T : UIKit.UITableViewCell
}
@_hasMissingDesignatedInitializers public class LynkiD {
  public static let shared: LynkiDSDK.LynkiD
  public func initSDK(cif: Swift.String, phoneNumber: Swift.String, userName: Swift.String, partnerCode: Swift.String, merchantName: Swift.String, presentAction: ((_ vc: UIKit.UIViewController) -> Swift.Void))
  @objc deinit
}
